name: ISO Maker
on:
  schedule:
  - cron: "15 07 3 * *"
  workflow_dispatch:
  push:
    branches:
    - 'ft_build_container_installer'
jobs:
  iso-maker:
    name: ISO Maker
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      image_name: ublahaj
      image_tag: latest
    strategy:
      fail-fast: false
      matrix:
        image_variant:
          - kinoite-40-main
          - kinoite-40-nvidia
    steps:
    - name: Build ISO
      uses: jasonn3/build-container-installer@main
      id: build
      with:
        arch: x86_64
        image_name: ${{ env.image_name }}
        image_repo: ${{ github.repository }}
        image_tag: ${{ env.image_tag }}
        version: 40
        variant: ${{ matrix.image_variant }}
        iso_name: ${{ env.image_name }}-${{ matrix.image_variant }}-${{ env.image_tag }}.iso

    # This example is for uploading your ISO as a Github artifact. You can do something similar using any cloud storage, so long as you copy the output
    - name: Upload ISO as artifact
      id: upload
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.build.outputs.iso_name }}
        path: |
          ${{ steps.build.outputs.iso_path }}
          ${{ steps.build.outputs.iso_path }}-CHECKSUM
        if-no-files-found: error
        retention-days: 0
        compression-level: 0
